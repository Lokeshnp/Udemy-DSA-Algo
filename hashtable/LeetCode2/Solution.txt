    public static List<Integer> findDuplicates(int[] nums) {
        Map<Integer, Integer> numCounts = new HashMap<>();
        for (int num : nums) {
            numCounts.put(num, numCounts.getOrDefault(num, 0) + 1);
        }
        List<Integer> duplicates = new ArrayList<>();
        for (Map.Entry<Integer, Integer> entry : numCounts.entrySet()) {
            if (entry.getValue() > 1) {
                duplicates.add(entry.getKey());
            }
        }
        return duplicates;
    }




The findDuplicates method takes an array of integers (nums) as input and returns a list of integers that represent the duplicate elements in the input array.

The method first creates a new HashMap object named numCounts, which will store the count of occurrences of each integer in nums. It loops through each element in nums using a for-each loop, and for each element, it inserts a key-value pair into the HashMap. The key is the element itself, and the value is the count of occurrences of the element in nums.

Next, the method creates a new ArrayList object named duplicates, which will store the duplicate elements in the input array. It then loops through each entry in numCounts using a for-each loop, and for each entry, it checks if the count of occurrences of the element is greater than 1. If so, it adds the element to the duplicates list using the add method.

Finally, the method returns the duplicates list, which contains all the duplicate elements in the input array.





Code with inline comments:



public static ArrayList<Integer> findDuplicates(int[] nums) {

    // Create a new HashMap to store the count of occurrences
    // of each integer.
    Map<Integer, Integer> numCounts = new HashMap<>();

    // Loop through each integer in the input array and update
    // its count in the HashMap.
    for (int num : nums) {
        numCounts.put(num, numCounts.getOrDefault(num, 0) + 1);
    }

    // Create a new ArrayList to store the duplicate integers.
    List<Integer> duplicates = new ArrayList<>();

    // Loop through each entry in the HashMap and check if the
    // count of occurrences is greater than 1.
    for (Map.Entry<Integer, Integer> entry : numCounts.entrySet()) {
        if (entry.getValue() > 1) {
            duplicates.add(entry.getKey());
        }
    }

    // Return the ArrayList of duplicate integers.
    return duplicates;
}